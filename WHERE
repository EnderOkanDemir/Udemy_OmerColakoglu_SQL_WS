=           : Equal to
<>          : Not equal to
>=          : Greater than or equal to
<=          : Less than or equal to
BETWEEN     : Used to specify a range between two values
LIKE        : Starts with, end with, include (It's often used with wildcard characters to match patterns.
IN          : Used to filter rows where a column's value matches any value in a specified list

SELECT * FROM employees WHERE department_id IN (101, 102, 103);
- In this query, the "IN" operator is used to retrieve all rows from the "employees" table where the "department_id" column matches any of the values in the list (101, 102, 103). 
- This allows you to efficiently filter data based on multiple possible values for a column.


SELECT * 
FROM CUSTOMER
WHERE CUSTOMERNAME = 'Mina MİKYAZ'

SELECT * 
FROM CUSTOMER
WHERE CUSTOMERNAME = 'Mina Mikyaz'


SELECT * 
FROM CUSTOMER
WHERE CUSTOMERNAME LIKE('Mi%')


SELECT * 
FROM CUSTOMER
WHERE AGE = 42


SELECT * 
FROM CUSTOMER
WHERE CITY = 'İZMİR'


SELECT *
FROM CUSTOMER
WHERE PHONE_NUMBER LIKE('0532%')


SELECT *
FROM CUSTOMER
WHERE BIRTHDATE LIKE('1985%')


- We can write the query without using spaces, dashes, or periods.
SELECT *
FROM CUSTOMER
WHERE BIRTHDATE = '19951005'


SELECT *
FROM CUSTOMER
WHERE BIRTHDATE <> '19951005'


SELECT *
FROM CUSTOMER
WHERE BIRTHDATE <> '19951005' AND CITY ='İZMİR'


SELECT *
FROM CUSTOMER
WHERE BIRTHDATE LIKE '1984%' AND CITY ='ELAZIĞ'


SELECT *
FROM CUSTOMER
WHERE AGE > 75


SELECT *
FROM CUSTOMER
WHERE AGE >= 75


SELECT *
FROM CUSTOMER
WHERE AGE < 25


SELECT *
FROM CUSTOMER
WHERE AGE <= 25


SELECT *
FROM CUSTOMER
WHERE BIRTHDATE >= '19991030'


-- When we use the 'BETWEEN' clause in the query as follows, it will retrieve both the boundary values and the ages falling within these boundaries.
SELECT *
FROM CUSTOMER
WHERE AGE BETWEEN 25 AND 27


-- We can retrieve the same result by using the AND command like the following but using BETWEEN is more comfortable in that kind of searching
-- We can achieve the same result by using the AND command as shown below, but using BETWEEN is more convenient for this type of search.
SELECT * 
FROM  CUSTOMER
WHERE AGE >=25 AND AGE <=27


SELECT *
FROM CUSTOMER
WHERE BIRTHDATE BETWEEN '19980101' AND '19981231'


SELECT *
FROM CUSTOMER
WHERE BIRTHDATE LIKE '1998%'


SELECT *
FROM CUSTOMER
WHERE CUSTOMERNAME LIKE 'OKAN%'



SELECT *
FROM CUSTOMER
WHERE CUSTOMERNAME LIKE '%İNCE%'


SELECT *
FROM CUSTOMER
WHERE CUSTOMERNAME LIKE '%DEMİR'


SELECT *
FROM CUSTOMER
WHERE CUSTOMERNAME LIKE '%demir'


SELECT *
FROM CUSTOMER
WHERE CITY = 'İzmir' 
AND DISTRICT = 'Torbalı' OR DISTRICT = 'Konak'


SELECT *
FROM CUSTOMER
WHERE CITY ='İzmir' 
AND DISTRICT IN('Torbalı', 'Konak')


SELECT *
FROM CUSTOMER
WHERE CITY ='İzmir' 
AND DISTRICT NOT IN('Torbalı', 'Konak')


DELETE FROM CUSTOMER
WHERE ID = 1


DELETE FROM CUSTOMER
WHERE CUSTOMERNAME LIKE 'SERHAT%'


UPDATE CUSTOMER
SET GENDER = 'ERKEK'
WHERE GENDER ='E'

-- String or binary data would be truncated in table 'ETRADE.dbo.CUSTOMER', column 'GENDER'. Truncated value: 'E'.
-- The statement has been terminated.

-- If we encounter the error as shown above, we should change the Data Type of the 'Gender' column from varchar(1) to varchar(10).
-- To achieve this, follow the steps shown below: 
-- Tools - Options - Designers - Table and Database Designers - Prevent saving changes that require table re-creation





