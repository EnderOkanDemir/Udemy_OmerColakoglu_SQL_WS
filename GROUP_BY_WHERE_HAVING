SELECT BRANCH,
SUM(LINENET) AS TOPLAMSATIS, 
COUNT(*) AS SATIRSAYISI, 
MIN(LINENET) AS ENDUSUKFIYAT, 
MAX(LINENET) AS ENYUKSEKFIYAT, 
AVG(LINENET) AS ORTALAMASATIS
FROM SALES
WHERE BRANCH = 'Kocaeli Subesi'
GROUP BY BRANCH
-- We used the WHERE command with GROUP BY, and it retrieved an output
-- Because we didn't use an aggregate function with the WHERE command
-- Using aggregate and WHERE functions together would result in an error.

SELECT BRANCH,
SUM(LINENET) AS TOPLAMSATIS, 
COUNT(*) AS SATIRSAYISI, 
MIN(LINENET) AS ENDUSUKFIYAT, 
MAX(LINENET) AS ENYUKSEKFIYAT, 
AVG(LINENET) AS ORTALAMASATIS
FROM SALES
GROUP BY BRANCH


SELECT BRANCH AS SUBEADI,
SUM(LINENET) AS TOPLAMSATIS
FROM SALES
GROUP BY BRANCH 
ORDER BY SUM(LINENET) DESC


SELECT BRANCH AS SUBEADI,
SUM(LINENET) AS TOPLAMSATIS
FROM SALES
GROUP BY BRANCH 
ORDER BY 2 DESC

SELECT *
FROM SALES

SELECT BRANCH AS SUBEADI,
SUM(AMOUNT * PRICE) AS TOPLAMSATIS
FROM SALES
GROUP BY BRANCH
ORDER BY TOPLAMSATIS DESC


SELECT TOP 5 BRANCH AS SUBEADI,
SUM(AMOUNT * PRICE) AS TOPLAMSATIS
FROM SALES
GROUP BY BRANCH
ORDER BY TOPLAMSATIS DESC


SELECT BRANCH, LINENETTOTAL
FROM SALES
WHERE LINENETTOTAL > 5
GROUP BY BRANCH, LINENETTOTAL


SELECT BRANCH, SUM(LINENET) AS TOPLAMSATIS
FROM SALES
GROUP BY BRANCH
HAVING SUM(LINENET) > 50000
ORDER BY 2 DESC
-- Using aggregate and WHERE functions together can result in an error.
-- Therefore, we used HAVING instead of WHERE not to get an error
-- Therefore, we used HAVING instead of WHERE to avoid errors.


-- Daily total sales amount.
-- Total daily sales amount.
-- Amount of daily sales totals.


SELECT *
FROM SALES
WHERE BRANCH = 'Bursa Subesi' AND DATE_ = '20170105'


SELECT BRANCH AS SUBE, DATE_ AS TARIH, COUNT(*) AS SATIRSAYISI, SUM(LINENET) AS TOPLAMSATIS
FROM SALES
WHERE BRANCH = 'Bursa Subesi' AND DATE_ = '20170105'
GROUP BY BRANCH, DATE_


SELECT BRANCH AS SUBE, DATE_ AS TARIH, COUNT(*) AS SATIRSAYISI, SUM(LINENET) AS TOPLAMSATIS
FROM SALES
WHERE BRANCH = 'Bursa Subesi'
GROUP BY BRANCH, DATE_
ORDER BY DATE_


SELECT BRANCH AS SUBE, DATE_ AS TARIH, COUNT(*) AS SATIRSAYISI, SUM(LINENET) AS TOPLAMSATIS
FROM SALES
WHERE BRANCH = 'Bursa Subesi'
GROUP BY BRANCH, DATE_
HAVING SUM(LINENET) > 500
ORDER BY DATE_


SELECT 81*100


-- Total daily sales amount based on branch
SELECT *
FROM SALES

SELECT DATE_, BRANCH, SUM(LINENET) AS TOPLAMSATIS
FROM SALES
WHERE DATE_ = '20170105'
GROUP BY DATE_, BRANCH
ORDER BY SUM(LINENET) DESC


SELECT DATE_, BRANCH, SUM(LINENET) AS TOPLAMSATIS
FROM SALES
GROUP BY DATE_, BRANCH
ORDER BY SUM(LINENET) DESC, DATE_ ASC


SELECT DATE_, BRANCH, CAST(SUM(LINENET) AS DECIMAL(18, 2)) AS TOPLAMSATIS
FROM SALES
GROUP BY DATE_, BRANCH
ORDER BY SUM(LINENET) DESC, DATE_ ASC

SELECT DATE_, BRANCH, CAST(SUM(LINENET) AS DECIMAL(18, 2)) AS TOPLAMSATIS
FROM SALES
WHERE DATE_ = '20170105'
GROUP BY DATE_, BRANCH
ORDER BY SUM(LINENET) DESC, DATE_ ASC

-- 'CAST' helps us specify the number of digits after the comma.
